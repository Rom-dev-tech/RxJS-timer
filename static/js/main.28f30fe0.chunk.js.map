{"version":3,"sources":["components/Button/Button.jsx","helpers/helperFunctionForTimer.jsx","helpers/onHandleClickHalpers.jsx","components/Timer/ButtonsGroup.styled.jsx","components/Timer/Timer.styled.jsx","components/Timer/Timer.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/PageContainer/PageContainer.jsx","views/TimerView.jsx","components/APP/App.jsx","index.js"],"names":["Button","onClick","buttonName","variant","style","minWidth","helperFunctionForTimer","value","toString","length","concat","handleClickHalpers","OnHandlerClick","t","d","s","p","useState","timer","setTimer","diff","setDiff","subscription","setSubscription","prevent","setPrevent","DELEY","onStartHandlerClick","unsubscribe","timerSubscription","interval","pipe","map","v","subscribe","onWaitHandlerClick","timerInstance","setTimeout","clearTimeout","onResetHandlerClick","ButtonGroup","styled","div","TimerWrapper","TimerStyle","span","Timer","ButtonsGroup","hours","setHours","minutes","setMinutes","seconds","setSeconds","timePast","useEffect","Math","floor","TitleStyle","h1","Title","title","PageContainer","TimerViews","App","TimerView","render","document","getElementById"],"mappings":"2NAiBeA,EAdA,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QACrC,OACE,cAAC,IAAD,CAAcC,MAAO,CAAEC,SAAU,KAAOJ,QAASA,EAASE,QAASA,EAAnE,SACGD,KCNMI,EAAyB,SAAAC,GAAK,OACZ,IAA5BA,EAAMC,WAAWC,OAAe,IAAM,IAAIC,OAAOH,I,gBCsErCI,EAJY,CACzBC,eAhEqB,WAAqC,IAApCC,EAAmC,uDAA/B,EAAGC,EAA4B,uDAAxB,EAAGC,EAAqB,uDAAjB,GAAIC,IAAa,yDACzD,EAA0BC,mBAASJ,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAASH,GAAjC,mBAAOM,EAAP,KAAaC,EAAb,KACA,EAAwCJ,mBAASF,GAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAA8BN,mBAASD,GAAvC,mBAAOQ,EAAP,KAAgBC,EAAhB,KAEMC,EAAQ,IAERC,EAAsB,WAC1B,GAAKL,EAQHA,EAAaM,cACbT,EAAS,GACTE,EAAQ,GACRE,EAAgB,QAXC,CACjB,IAAMM,EAAoBC,YAASJ,GAChCK,KAAKC,aAAI,SAAAC,GAAC,OAAIA,EAAI,MAClBC,WAAU,SAAAD,GACTd,EAASc,EAAIb,MAEjBG,EAAgBM,KASdM,EAAqB,WACzB,GAAIX,EAAS,CACXC,GAAW,GACX,IAAMW,EAAgBC,YAAW,WAC/BZ,GAAW,GACXa,aAAaF,KACZ,UAECd,GACFA,EAAaM,cAGfP,EAAQH,GACRK,EAAgB,KAIdgB,EAAsB,WAC1BlB,EAAQ,GAEJC,GACFA,EAAaM,cAGf,IAAMC,EAAoBC,YAASJ,GAAOQ,WAAU,SAAAD,GAClDd,EAASc,MAEXV,EAAgBM,IAGlB,MAAO,CACLX,QACAE,OACAO,sBACAQ,qBACAI,yB,cC7DSC,EAAcC,IAAOC,IAAV,mJCAXC,EAAeF,IAAOC,IAAV,mIAQZE,EAAaH,IAAOI,KAAV,iDCmDRC,EArDD,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACf,EAA0B9B,mBAAS,GAAnC,mBAAO+B,EAAP,KAAcC,EAAd,KACA,EAA8BhC,mBAAS,GAAvC,mBAAOiC,EAAP,KAAgBC,EAAhB,KACA,EAA8BlC,mBAAS,GAAvC,mBAAOmC,EAAP,KAAgBC,EAAhB,KAEA,EACE1C,EAAmBC,iBADbM,EAAR,EAAQA,MAAOE,EAAf,EAAeA,KAAMO,EAArB,EAAqBA,oBAAqBQ,EAA1C,EAA0CA,mBAAoBI,EAA9D,EAA8DA,oBAGxDe,EAAWpC,GAAgBE,EAajC,OAXAmC,qBAAU,WACR,IAAIP,EAAQQ,KAAKC,MAAMH,EAAW,MAClCL,EAAS3C,EAAuB0C,IAEhC,IAAIE,EAAUM,KAAKC,MAAOH,EAAW,KAAQ,IAC7CH,EAAW7C,EAAuB4C,IAGlCG,EAAW/C,EADGgD,EAAW,OAExB,CAACA,IAGF,qCACE,cAACX,EAAD,UACE,eAACC,EAAD,WACGI,EADH,IACWE,EADX,IACqBE,OAIvB,cAACZ,EAAD,UACoB,IAAjBO,EACC,cAAC,EAAD,CAAQ9C,QAAS0B,EAAqBzB,WAAW,eAC9B,IAAjB6C,EACF,qCACE,cAAC,EAAD,CAAQ9C,QAAS0B,EAAqBzB,WAAW,eACjD,cAAC,EAAD,CAAQD,QAASkC,EAAoBjC,WAAW,YAGlD,qCACE,cAAC,EAAD,CAAQD,QAAS0B,EAAqBzB,WAAW,eACjD,cAAC,EAAD,CAAQD,QAASkC,EAAoBjC,WAAW,SAChD,cAAC,EAAD,CAAQD,QAASsC,EAAqBrC,WAAW,mBC/ChDwD,EAAajB,IAAOkB,GAAV,0FCSRC,EARD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OAAO,cAACH,EAAD,UAAaG,KCEPC,EAJOrB,IAAOC,IAAV,oDCWJqB,EATI,WACjB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAOF,MAAM,UACb,cAAC,EAAD,CAAOd,aAAc,Q,MCDZiB,MAJf,WACE,OAAO,cAACC,EAAD,K,MCGTC,iBACE,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.28f30fe0.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport ActiveButton from 'react-bootstrap/Button';\n\nconst Button = ({ onClick, buttonName, variant }) => {\n  return (\n    <ActiveButton style={{ minWidth: 150 }} onClick={onClick} variant={variant}>\n      {buttonName}\n    </ActiveButton>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  buttonName: PropTypes.string.isRequired,\n  variant: PropTypes.string,\n};\n\nexport default Button;\n","export const helperFunctionForTimer = value =>\n  (value.toString().length === 1 ? '0' : '').concat(value);\n","import { useState } from 'react';\nimport { interval } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst OnHandlerClick = (t = 0, d = 0, s = '', p = true) => {\n  const [timer, setTimer] = useState(t);\n  const [diff, setDiff] = useState(d);\n  const [subscription, setSubscription] = useState(s);\n  const [prevent, setPrevent] = useState(p);\n\n  const DELEY = 1000;\n\n  const onStartHandlerClick = () => {\n    if (!subscription) {\n      const timerSubscription = interval(DELEY)\n        .pipe(map(v => v + 1))\n        .subscribe(v => {\n          setTimer(v + diff);\n        });\n      setSubscription(timerSubscription);\n    } else {\n      subscription.unsubscribe();\n      setTimer(0);\n      setDiff(0);\n      setSubscription('');\n    }\n  };\n\n  const onWaitHandlerClick = () => {\n    if (prevent) {\n      setPrevent(false);\n      const timerInstance = setTimeout(function () {\n        setPrevent(true);\n        clearTimeout(timerInstance);\n      }, 300);\n    } else {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n\n      setDiff(timer);\n      setSubscription('');\n    }\n  };\n\n  const onResetHandlerClick = () => {\n    setDiff(0);\n\n    if (subscription) {\n      subscription.unsubscribe();\n    }\n\n    const timerSubscription = interval(DELEY).subscribe(v => {\n      setTimer(v);\n    });\n    setSubscription(timerSubscription);\n  };\n\n  return {\n    timer,\n    diff,\n    onStartHandlerClick,\n    onWaitHandlerClick,\n    onResetHandlerClick,\n  };\n};\n\nconst handleClickHalpers = {\n  OnHandlerClick,\n};\n\nexport default handleClickHalpers;\n","import styled from '@emotion/styled';\n\nexport const ButtonGroup = styled.div`\n  margin: 0 auto;\n  max-width: 700px;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import styled from '@emotion/styled';\n\nexport const TimerWrapper = styled.div`\n  height: 50vh;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TimerStyle = styled.span`\n  font-size: 10rem;\n`;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'components/Button';\nimport { helperFunctionForTimer } from 'helpers/helperFunctionForTimer';\nimport handleClickHalpers from 'helpers/onHandleClickHalpers';\nimport { ButtonGroup } from './ButtonsGroup.styled';\nimport { TimerWrapper, TimerStyle } from './Timer.styled';\n\nconst Timer = ({ ButtonsGroup }) => {\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n\n  const { timer, diff, onStartHandlerClick, onWaitHandlerClick, onResetHandlerClick } =\n    handleClickHalpers.OnHandlerClick();\n\n  const timePast = timer ? timer : diff;\n\n  useEffect(() => {\n    let hours = Math.floor(timePast / 3600);\n    setHours(helperFunctionForTimer(hours));\n\n    let minutes = Math.floor((timePast % 3600) / 60);\n    setMinutes(helperFunctionForTimer(minutes));\n\n    let seconds = timePast % 60;\n    setSeconds(helperFunctionForTimer(seconds));\n  }, [timePast]);\n\n  return (\n    <>\n      <TimerWrapper>\n        <TimerStyle>\n          {hours}:{minutes}:{seconds}\n        </TimerStyle>\n      </TimerWrapper>\n\n      <ButtonGroup>\n        {ButtonsGroup === 1 ? (\n          <Button onClick={onStartHandlerClick} buttonName=\"Start/Stop\" />\n        ) : ButtonsGroup === 2 ? (\n          <>\n            <Button onClick={onStartHandlerClick} buttonName=\"Start/Stop\" />\n            <Button onClick={onWaitHandlerClick} buttonName=\"Wait\" />\n          </>\n        ) : (\n          <>\n            <Button onClick={onStartHandlerClick} buttonName=\"Start/Stop\" />\n            <Button onClick={onWaitHandlerClick} buttonName=\"Wait\" />\n            <Button onClick={onResetHandlerClick} buttonName=\"Reset\" />\n          </>\n        )}\n      </ButtonGroup>\n    </>\n  );\n};\n\nTimer.propTypes = {\n  ButtonsGroup: PropTypes.number,\n};\n\nexport default Timer;\n","import styled from '@emotion/styled';\n\nexport const TitleStyle = styled.h1`\n  font-size: 6rem;\n  color: #0d6efd;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { TitleStyle } from './Title.styled';\n\nconst Title = ({ title }) => {\n  return <TitleStyle>{title}</TitleStyle>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import styled from '@emotion/styled';\n\nconst PageContainer = styled.div`\n  padding: 50px 100px;\n`;\n\nexport default PageContainer;\n","import Timer from 'components/Timer';\nimport Title from 'components/Title';\nimport PageContainer from 'components/PageContainer';\n\nconst TimerViews = () => {\n  return (\n    <PageContainer>\n      <Title title=\"Timer\" />\n      <Timer ButtonsGroup={3} />\n    </PageContainer>\n  );\n};\n\nexport default TimerViews;\n","import TimerViews from 'views';\nimport 'components/APP/App.scss';\n\nfunction App() {\n  return <TimerViews />;\n}\n\nexport default App;\n","import { StrictMode } from 'react';\nimport { render } from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\n\nimport App from 'components/APP/App';\nimport 'index.scss';\n\nrender(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}