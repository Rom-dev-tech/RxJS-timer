{"version":3,"sources":["helpers/helperFunctionForTimer.jsx","components/Timer/Timer.styled.jsx","components/Timer/Timer.jsx","components/Btn/Btn.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/PageContainer/PageContainer.jsx","views/TimerView.jsx","components/APP/App.jsx","index.js"],"names":["helpers","helperFunctionForTimer","value","toString","length","TimerWrapper","styled","div","TimerStyle","h3","Timer","timePast","useState","hours","setHours","minutes","setMinutes","seconds","setSeconds","useEffect","Math","floor","Btn","onClick","variant","btnName","Button","type","as","Col","className","TitleStyle","h1","Title","title","PageContainer","TimerViews","timer","setTimer","diff","setDiff","subscription","setSubscription","prevent","setPrevent","Row","unsubscribe","timerSubscription","interval","pipe","map","v","subscribe","timerInstance","setTimeout","clearTimeout","App","TimerView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAMeA,EAJC,CACdC,uBAH6B,SAAAC,GAAK,OAAiC,IAA5BA,EAAMC,WAAWC,OAAe,IAAM,IAAMF,I,cCExEG,EAAeC,IAAOC,IAAV,mIAQZC,EAAaF,IAAOG,GAAV,iD,OCwBRC,EA7BD,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACf,EAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,qBAAU,WACR,IAAIN,EAAQO,KAAKC,MAAMV,EAAW,MAClCG,EAASd,EAAQC,uBAAuBY,IAExC,IAAIE,EAAUK,KAAKC,MAAOV,EAAW,KAAQ,IAC7CK,EAAWhB,EAAQC,uBAAuBc,IAE1C,IAAIE,EAAUN,EAAW,GACzBO,EAAWlB,EAAQC,uBAAuBgB,MACzC,CAACN,IAGF,cAACN,EAAD,UACE,eAACG,EAAD,WACGK,EADH,IACWE,EADX,IACqBE,Q,gBCNZK,EAdH,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAC/B,OACE,cAACC,EAAA,EAAD,CAAQC,KAAK,SAASJ,QAASA,EAASK,GAAIC,IAAKL,QAASA,EAASM,UAAU,OAA7E,SACGL,KCLMM,EAAazB,IAAO0B,GAAV,0FCSRC,EARD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OAAO,cAACH,EAAD,UAAaG,KCEPC,EAJO7B,IAAOC,IAAV,oD,wBC8EJ6B,EArEI,WACjB,MAA0BxB,mBAAS,GAAnC,mBAAOyB,EAAP,KAAcC,EAAd,KACA,EAAwB1B,mBAAS,GAAjC,mBAAO2B,EAAP,KAAaC,EAAb,KACA,EAAwC5B,mBAAS,IAAjD,mBAAO6B,EAAP,KAAqBC,EAArB,KACA,EAA8B9B,oBAAS,GAAvC,mBAAO+B,EAAP,KAAgBC,EAAhB,KAkDA,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAOV,MAAM,UAEb,cAAC,EAAD,CAAOvB,SAAU0B,GAAgBE,IAEjC,eAACM,EAAA,EAAD,CAAKf,UAAU,OAAf,UACE,cAAC,EAAD,CAAKP,QArDiB,WAC1B,GAAKkB,EAQHA,EAAaK,cACbR,EAAS,GACTE,EAAQ,GACRE,EAAgB,QAXC,CACjB,IAAMK,EAAoBC,YAJhB,KAKPC,KAAKC,aAAI,SAAAC,GAAC,OAAIA,EAAI,MAClBC,WAAU,SAAAD,GACTb,EAASa,EAAIZ,MAEjBG,EAAgBK,KA8CqBvB,QAAQ,UAAUC,QAAQ,eAC7D,cAAC,EAAD,CAAKF,QAtCgB,WACzB,GAAIoB,EAAS,CACXC,GAAW,GACX,IAAMS,EAAgBC,YAAW,WAC/BV,GAAW,GACXW,aAAaF,KACZ,UAECZ,GACFA,EAAaK,cAGfN,EAAQH,GACRK,EAAgB,KAyBoBlB,QAAQ,UAAUC,QAAQ,SAC5D,cAAC,EAAD,CAAKF,QAtBiB,WAC1BiB,EAAQ,GAEJC,GACFA,EAAaK,cAGf,IAAMC,EAAoBC,YA1Cd,KA0C8BI,WAAU,SAAAD,GAClDb,EAASa,MAEXT,EAAgBK,IAYuBvB,QAAQ,SAASC,QAAQ,iB,MCnErD+B,MAJf,WACE,OAAO,cAACC,EAAD,K,MCGTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ab8dc4e7.chunk.js","sourcesContent":["const helperFunctionForTimer = value => (value.toString().length === 1 ? '0' : '') + value;\n\nconst helpers = {\n  helperFunctionForTimer,\n};\n\nexport default helpers;\n","import styled from '@emotion/styled';\n\nexport const TimerWrapper = styled.div`\n  height: 50vh;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TimerStyle = styled.h3`\n  font-size: 10rem;\n`;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport helpers from 'helpers/helperFunctionForTimer';\nimport { TimerWrapper, TimerStyle } from './Timer.styled';\n\nconst Timer = ({ timePast }) => {\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    let hours = Math.floor(timePast / 3600);\n    setHours(helpers.helperFunctionForTimer(hours));\n\n    let minutes = Math.floor((timePast % 3600) / 60);\n    setMinutes(helpers.helperFunctionForTimer(minutes));\n\n    let seconds = timePast % 60;\n    setSeconds(helpers.helperFunctionForTimer(seconds));\n  }, [timePast]);\n\n  return (\n    <TimerWrapper>\n      <TimerStyle>\n        {hours}:{minutes}:{seconds}\n      </TimerStyle>\n    </TimerWrapper>\n  );\n};\n\nTimer.propTypes = {\n  timePast: PropTypes.number.isRequired,\n};\n\nexport default Timer;\n","import PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport { Col } from 'react-bootstrap';\n\nconst Btn = ({ onClick, variant, btnName }) => {\n  return (\n    <Button type=\"button\" onClick={onClick} as={Col} variant={variant} className=\"mx-2\">\n      {btnName}\n    </Button>\n  );\n};\n\nBtn.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  variant: PropTypes.string.isRequired,\n  btnName: PropTypes.string.isRequired,\n};\n\nexport default Btn;\n","import styled from '@emotion/styled';\n\nexport const TitleStyle = styled.h1`\n  font-size: 6rem;\n  color: #03a9f4;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { TitleStyle } from './Title.styled';\n\nconst Title = ({ title }) => {\n  return <TitleStyle>{title}</TitleStyle>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import styled from '@emotion/styled';\n\nconst PageContainer = styled.div`\n  padding: 50px 100px;\n`;\n\nexport default PageContainer;\n","import { useState } from 'react';\nimport Timer from 'components/Timer';\nimport Btn from 'components/Btn';\nimport Title from 'components/Title';\nimport PageContainer from 'components/PageContainer';\n\nimport { interval } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Row } from 'react-bootstrap';\n\nconst TimerViews = () => {\n  const [timer, setTimer] = useState(0);\n  const [diff, setDiff] = useState(0);\n  const [subscription, setSubscription] = useState('');\n  const [prevent, setPrevent] = useState(true);\n\n  const DELEY = 1000;\n\n  const onStartHandlerClick = () => {\n    if (!subscription) {\n      const timerSubscription = interval(DELEY)\n        .pipe(map(v => v + 1))\n        .subscribe(v => {\n          setTimer(v + diff);\n        });\n      setSubscription(timerSubscription);\n    } else {\n      subscription.unsubscribe();\n      setTimer(0);\n      setDiff(0);\n      setSubscription('');\n    }\n  };\n\n  const onWaitHandlerClick = () => {\n    if (prevent) {\n      setPrevent(false);\n      const timerInstance = setTimeout(function () {\n        setPrevent(true);\n        clearTimeout(timerInstance);\n      }, 300);\n    } else {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n\n      setDiff(timer);\n      setSubscription('');\n    }\n  };\n\n  const onResetHandlerClick = () => {\n    setDiff(0);\n\n    if (subscription) {\n      subscription.unsubscribe();\n    }\n\n    const timerSubscription = interval(DELEY).subscribe(v => {\n      setTimer(v);\n    });\n    setSubscription(timerSubscription);\n  };\n\n  return (\n    <PageContainer>\n      <Title title=\"Timer\" />\n\n      <Timer timePast={timer ? timer : diff} />\n\n      <Row className=\"mx-0\">\n        <Btn onClick={onStartHandlerClick} variant=\"success\" btnName=\"Start/Stop\" />\n        <Btn onClick={onWaitHandlerClick} variant=\"warning\" btnName=\"Wait\" />\n        <Btn onClick={onResetHandlerClick} variant=\"danger\" btnName=\"Reset\" />\n      </Row>\n    </PageContainer>\n  );\n};\n\nexport default TimerViews;\n","import TimerViews from 'views';\nimport 'components/APP/App.scss';\n\nfunction App() {\n  return <TimerViews />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\n\nimport App from 'components/APP/App';\nimport 'index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}