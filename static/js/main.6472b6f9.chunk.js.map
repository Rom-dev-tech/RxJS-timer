{"version":3,"sources":["helpers/helperFunctionForTimer.jsx","components/Timer/Timer.styled.jsx","components/Timer/Timer.jsx","components/Button/Button.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/PageContainer/PageContainer.jsx","helpers/onHandleClickHalpers.jsx","views/ButtonsGroup.styled.jsx","views/TimerView.jsx","components/APP/App.jsx","index.js"],"names":["helperFunctionForTimer","value","toString","length","concat","TimerWrapper","styled","div","TimerStyle","span","Timer","timePast","useState","hours","setHours","minutes","setMinutes","seconds","setSeconds","useEffect","Math","floor","Button","onClick","buttonName","TitleStyle","h1","Title","title","memo","PageContainer","handleClickHalpers","OnHandlerClick","t","d","s","p","timer","setTimer","diff","setDiff","subscription","setSubscription","prevent","setPrevent","onStartHandlerClick","unsubscribe","timerSubscription","interval","pipe","map","v","subscribe","onWaitHandlerClick","timerInstance","setTimeout","clearTimeout","onResetHandlerClick","ButtonGroup","TimerViews","App","TimerView","render","document","getElementById"],"mappings":"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","file":"static/js/main.6472b6f9.chunk.js","sourcesContent":["export const helperFunctionForTimer = value =>\n  (value.toString().length === 1 ? '0' : '').concat(value);\n","import styled from '@emotion/styled';\n\nexport const TimerWrapper = styled.div`\n  height: 50vh;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TimerStyle = styled.span`\n  font-size: 10rem;\n`;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { helperFunctionForTimer } from 'helpers/helperFunctionForTimer';\nimport { TimerWrapper, TimerStyle } from './Timer.styled';\n\nconst Timer = ({ timePast }) => {\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    let hours = Math.floor(timePast / 3600);\n    setHours(helperFunctionForTimer(hours));\n\n    let minutes = Math.floor((timePast % 3600) / 60);\n    setMinutes(helperFunctionForTimer(minutes));\n\n    let seconds = timePast % 60;\n    setSeconds(helperFunctionForTimer(seconds));\n  }, [timePast]);\n\n  return (\n    <TimerWrapper>\n      <TimerStyle>\n        {hours}:{minutes}:{seconds}\n      </TimerStyle>\n    </TimerWrapper>\n  );\n};\n\nTimer.propTypes = {\n  timePast: PropTypes.number.isRequired,\n};\n\nexport default Timer;\n","import PropTypes from 'prop-types';\nimport ActiveButton from 'react-bootstrap/Button';\n\nconst Button = ({ onClick, buttonName }) => {\n  return <ActiveButton onClick={onClick}>{buttonName}</ActiveButton>;\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  buttonName: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import styled from '@emotion/styled';\n\nexport const TitleStyle = styled.h1`\n  font-size: 6rem;\n  color: #0d6efd;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { memo } from 'react';\nimport { TitleStyle } from './Title.styled';\n\nconst Title = ({ title }) => {\n  return <TitleStyle>{title}</TitleStyle>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default memo(Title);\n","import styled from '@emotion/styled';\n\nconst PageContainer = styled.div`\n  padding: 50px 100px;\n`;\n\nexport default PageContainer;\n","import { useState } from 'react';\nimport { interval } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst OnHandlerClick = (t, d, s, p) => {\n  const [timer, setTimer] = useState(t);\n  const [diff, setDiff] = useState(d);\n  const [subscription, setSubscription] = useState(s);\n  const [prevent, setPrevent] = useState(p);\n\n  const DELEY = 1000;\n\n  const onStartHandlerClick = () => {\n    if (!subscription) {\n      const timerSubscription = interval(DELEY)\n        .pipe(map(v => v + 1))\n        .subscribe(v => {\n          setTimer(v + diff);\n        });\n      setSubscription(timerSubscription);\n    } else {\n      subscription.unsubscribe();\n      setTimer(0);\n      setDiff(0);\n      setSubscription('');\n    }\n  };\n\n  const onWaitHandlerClick = () => {\n    if (prevent) {\n      setPrevent(false);\n      const timerInstance = setTimeout(function () {\n        setPrevent(true);\n        clearTimeout(timerInstance);\n      }, 300);\n    } else {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n\n      setDiff(timer);\n      setSubscription('');\n    }\n  };\n\n  const onResetHandlerClick = () => {\n    setDiff(0);\n\n    if (subscription) {\n      subscription.unsubscribe();\n    }\n\n    const timerSubscription = interval(DELEY).subscribe(v => {\n      setTimer(v);\n    });\n    setSubscription(timerSubscription);\n  };\n\n  return {\n    timer,\n    diff,\n    onStartHandlerClick,\n    onWaitHandlerClick,\n    onResetHandlerClick,\n  };\n};\n\nconst handleClickHalpers = {\n  OnHandlerClick,\n};\n\nexport default handleClickHalpers;\n","import styled from '@emotion/styled';\n\nexport const ButtonGroup = styled.div`\n  margin: 0 auto;\n  max-width: 500px;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import Timer from 'components/Timer';\nimport Button from 'components/Button';\nimport Title from 'components/Title';\nimport PageContainer from 'components/PageContainer';\nimport handleClickHalpers from 'helpers/onHandleClickHalpers';\nimport { ButtonGroup } from './ButtonsGroup.styled';\n\nconst TimerViews = () => {\n  const { timer, diff, onStartHandlerClick, onWaitHandlerClick, onResetHandlerClick } =\n    handleClickHalpers.OnHandlerClick(0, 0, '', true);\n\n  return (\n    <PageContainer>\n      <Title title=\"Timer\" />\n\n      <Timer timePast={timer ? timer : diff} />\n\n      <ButtonGroup>\n        <Button onClick={onStartHandlerClick} buttonName=\"Start/Stop\" />\n        <Button onClick={onWaitHandlerClick} buttonName=\"Wait\" />\n        <Button onClick={onResetHandlerClick} buttonName=\"Reset\" />\n      </ButtonGroup>\n    </PageContainer>\n  );\n};\n\nexport default TimerViews;\n","import TimerViews from 'views';\nimport 'components/APP/App.scss';\n\nfunction App() {\n  return <TimerViews />;\n}\n\nexport default App;\n","import { StrictMode } from 'react';\nimport { render } from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\n\nimport App from 'components/APP/App';\nimport 'index.scss';\n\nrender(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}